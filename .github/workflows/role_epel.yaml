---
name: epel

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 0'
  push:
    paths:
      - 'roles/epel/**'
      - 'molecule/epel/**'
      - '.github/workflows/role_epel.yaml'
  pull_request:
    paths:
      - 'roles/epel/**'
      - 'molecule/epel/**'
      - '.github/workflows/role_epel.yaml'

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      ansible: ${{ steps.set-matrix.outputs.ansible }}
      distro: ${{ steps.set-matrix.outputs.distro }}
      include: ${{ steps.set-matrix.outputs.include }}
      exclude: ${{ steps.set-matrix.outputs.exclude }}
    steps:
      - uses: actions/checkout@v2
      - name: Set matrix outputs
        id: set-matrix
        run: |
          include=$(jq -c .${{ github.workflow }}.include .github/matrix.json)
          [[ "$include" == "null" ]] && include=$(jq -c .include .github/matrix.json)
          echo "::set-output name=ansible::`jq -c .ansible .github/matrix.json`"
          echo "::set-output name=distro::`jq -c .distro .github/matrix.json`"
          echo "::set-output name=include::$include"
          echo "::set-output name=exclude::`jq -c '.${{ github.workflow }}.exclude // []' .github/matrix.json`"

  molecule:
    # skip job on pull requests from base repository and tag push
    if: (github.event.pull_request.head.repo.full_name != github.repository) && !startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        ansible: ${{ fromJson(needs.matrix.outputs.ansible) }}
        distro: ${{ fromJson(needs.matrix.outputs.distro) }}
        include: ${{ fromJson(needs.matrix.outputs.include) }}
        exclude: ${{ fromJson(needs.matrix.outputs.exclude) }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - uses: bonddim/action-lxd-init@stable
      - uses: bonddim/action-ansible-molecule@stable
        with:
          molecule-options: --debug
          molecule-command-args: --scenario-name ${{ github.workflow }}
        env:
          ANSIBLE_VERSION: ${{ matrix.ansible }}
          MOLECULE_DISTRO: ${{ matrix.distro }}
